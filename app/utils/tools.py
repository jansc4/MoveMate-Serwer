from app.database import get_db
from fastapi import Depends, HTTPException
from motor.motor_asyncio import AsyncIOMotorDatabase
from datetime import datetime, date, time

async def check_exercise(required_exercise: str, db: AsyncIOMotorDatabase):
    """
    Sprawdza, czy Ä‡wiczenie jest juÅ¼ w bazie danych.

    Args:
        required_exercise (str): Ä‡wiczenie, ktÃ³ry ma zostaÄ‡ sprawdzone.
        db: Obiekt bazy danych.

    Raises:
        HTTPException: JeÅ›li Ä‡wiczenie jest juÅ¼ w uÅ¼yciu, zgÅ‚asza bÅ‚Ä…d 400 (Bad Request).
    """
    print(f"ğŸ”— PoÅ‚Ä…czono z bazÄ…: {db}")  # Debug print, moÅ¼na usunÄ…Ä‡ w produkcji
    existing = await db.exercises.find_one({"name": required_exercise})
    if existing:
        raise HTTPException(status_code=400, detail=f"Exercise '{required_exercise}' already exists.")

def today():
    today_date = date.today()
    datetime_with_zero_time = datetime.combine(today_date, time.min)
    return datetime_with_zero_time
